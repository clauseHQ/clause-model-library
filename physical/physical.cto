/**
 * (c) Copyright 2018 Clause Inc., all rights reserved.
 */
namespace io.clause.outbound.physical

abstract event PhysicalAction {}

/**
 * Synchronous outbound messages via HTTP 
 */
event Http extends PhysicalAction {
  o HttpMethod method
  o String url
  o String headers optional // Stringified JSON object
  o String body // Stringified JSON object
}

event BearerTokenHTTP extends Http {
  o String token
}

event OauthHTTP extends Http {
  o String token
  o String refreshToken
}

enum HttpMethod {
  o POST
  o PATCH
  o GET
  o DELETE
}

enum LogLevel {
  o error
  o warn
  o info
  o verbose
  o debug
  o silly
}

/**
 * Logging to console 
 */
event ConsoleLog extends PhysicalAction {
  o LogLevel level
  o String message
}

/**
 * Async outbound messages via MQTT
 */
abstract event Mqtt extends PhysicalAction{
  o String connectionString
  o Integer qos default=2
  o String message
}

event MqttTopicPublish extends Mqtt {
  o String topic
}

event MqttQueueSend extends Mqtt {
  o String queue
}

// Taken from the librdkafka configuration options, https://github.com/edenhill/librdkafka/blob/v0.11.5/CONFIGURATION.md
event KafkaPublish extends PhysicalAction {
  o String brokerString // Comma separated list of brokerString
  o String message
  o String topic
  o String username
  o String password
} 

// Do not implement this, used for testing the error handling
event NonImplementedModel extends PhysicalAction {}